-- 1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region

SELECT 
       distinct market
FROM 
     dim_customer 
WHERE 
	 customer = 'Atliq Exclusive' and 
     region = 'APAC';


-- 2. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields,
--  unique_products_2020
--  unique_products_2021
--  percentage_chg

                                                       [ CASE Type Solution ]

SELECT
    COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END) AS unique_products_2020,
    COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) AS unique_products_2021,
    ((COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) - COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END)) / NULLIF(COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END), 0)) * 100 AS percentage_chg
FROM
    fact_sales_monthly
WHERE
    fiscal_year IN (2020, 2021);


                                                      [ CTE Type Solution ]

WITH Unique_Product_Count AS ( 
SELECT 
      fiscal_year ,
      COUNT( DISTINCT product_code ) No_of_Unique_Products  
FROM fact_sales_monthly 
GROUP BY fiscal_year ) 

SELECT 
X_2020.No_of_Unique_Products as Unique_products_2020 ,
Y_2021.No_of_Unique_Products as Unique_products_2021 ,
(( Y_2021.No_of_Unique_Products - X_2020.No_of_Unique_Products ) / NULLIF( X_2020.No_of_Unique_Products,0 )) * 100 as percentage_chg
FROM Unique_Product_Count X_2020
JOIN Unique_Product_Count Y_2021 
ON X_2020.fiscal_year = 2020 AND Y_2021.fiscal_year = 2021 ;


-- 3. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields,
-- segment
-- product_count

SELECT 
	  segment ,
	  COUNT( DISTINCT product_code ) as Product_count 
FROM dim_product 
GROUP BY segment
ORDER BY Product_count DESC ; 

-- 4. Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields,
-- segment
-- product_count_2020
-- product_count_2021
-- difference

With Yearly_Distinct_Products AS ( 
select 
p.segment as Segment ,
count( distinct 
      ( case when s.fiscal_year = 2020 then p.product_code end )) as Products_count_2020 ,
count( distinct 
      ( case when s.fiscal_year = 2021 then p.product_code end )) as Products_count_2021   
 from dim_product p       
join fact_sales_monthly s 
on p.product_code = s.product_code 
group by p.Segment ) 

select 
Segment,
Products_count_2020 , Products_count_2021 , 
( Products_count_2021 - Products_count_2020 ) as Difference 
from Yearly_Distinct_Products 
Order by Difference desc ; 



-- 5. Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields,
-- product_code
-- product
-- manufacturing_cost

SELECT 
        p.category,
        p.product_code ,
        p.product ,
       m.manufacturing_cost 
FROM  
      dim_product p
JOIN  
      fact_manufacturing_cost m 
      ON p.product_code = m.product_code 
WHERE m.manufacturing_cost = 
       ( SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost )  OR
        m.manufacturing_cost = 
       (  SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost ) ;


-- 6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the  Indian market
-- The final output contains these fields,
-- customer_code
-- customer
-- average_discount_percentage

SELECT 
c.customer_code ,
c.customer ,
pre.pre_invoice_discount_pct as average_discount_percentage 
from fact_pre_invoice_deductions pre 
join dim_customer c 
on pre.customer_code = c.customer_code 
where pre_invoice_discount_pct > 
								( SELECT AVG(pre_invoice_discount_pct) from fact_pre_invoice_deductions ) and 
                                fiscal_year = 2021  and 
                                market = "India" 
order by average_discount_percentage desc 
limit 5 ;


-- 7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and
-- high-performing months and take strategic decisions.
-- The final report contains these columns:
-- Month
-- Year
-- Gross sales Amount

SELECT 
      s.date ,
      s.fiscal_year ,
     SUM(round( ( g.gross_price * s.sold_quantity),2)) Gross_sales_Amount
FROM 
     fact_sales_monthly s
JOIN 
     fact_gross_price g
     ON s.product_code = g.product_code 
JOIN 
	 dim_customer c
     ON c.customer_code = s.customer_code
WHERE 
     c.customer = 'Atliq Exclusive'
GROUP BY s.date , s.fiscal_year ;


-- 8. In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity,
-- Quarter
-- total_sold_quantity

SELECT 
CASE 
WHEN date between '2019-09-01' and '2019-11-01' THEN concat('Q1 - ',MONTHNAME(date))
WHEN date between '2019-12-01' and '2020-02-01' THEN concat('Q2 - ',MONTHNAME(date))
WHEN date between '2020-03-01' and '2020-05-01' THEN concat('Q3 - ',MONTHNAME(date))
WHEN date between '2020-06-01' and '2020-08-01' THEN concat('Q4 - ',MONTHNAME(date))
END AS Quarters,
SUM(sold_quantity) AS total_sold_quantity 
FROM fact_sales_monthly 
WHERE fiscal_year = 2020
GROUP BY Quarters;

-- 9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields,
-- channel
-- gross_sales_mln
-- percentage

WITH cte1 as (
SELECT 
	c.channel ,
    ROUND(SUM( g.gross_price * s.sold_quantity /1000000),2) as gross_sales_mln 
FROM fact_sales_monthly s
JOIN fact_gross_price g
     ON s.product_code = g.product_code 
JOIN dim_customer c
     ON c.customer_code = s.customer_code 
where s.fiscal_year = 2021
GROUP BY c.channel )

SELECT 
       channel ,
       concat( gross_sales_mln,' M ' ) as gross_sales_mln ,
	   CONCAT(ROUND( gross_sales_mln * 100 / Total ,2 ),' %') As Pct 
FROM 
     ( select SUM( gross_sales_mln ) as Total from cte1 ) A,
     ( select * from cte1 ) B
order by Pct desc ;


-- 10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields,
-- division
-- product_code
-- product
-- total_sold_quantity
-- rank_order

with cte1 as (
select 
p.division,
s.product_code ,
p.product ,
sum(s.sold_quantity ) as total_sold_quantity ,
dense_rank() over ( partition by p.division order by sum( s.sold_quantity ) desc ) as rank_order 
from fact_sales_monthly s 
join dim_product p 
on s.product_code = p.product_code 
where fiscal_year = 2021 
group by 
division,
product_code ,
product ) 

select * from cte1 
 where rank_order < 4 ;





